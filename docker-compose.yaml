version: "3.8"
services:
  elasticsearch-server:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    restart: unless-stopped
    platform: linux/amd64
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.http.ssl.enabled=false
      - xpack.license.self_generated.type=trial
      - xpack.security.enabled=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - cognita-docker

  cognita-backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    platform: linux/amd64
    restart: unless-stopped
    container_name: cognita-backend
    ports:
      - "${COGNITA_BACKEND_PORT}:8000"
    depends_on:
      cognita-db:
        condition: service_healthy
        restart: true
      elasticsearch-server:
        condition: service_healthy
        restart: true

    volumes:
      - .:/app
      - ./volumes/pgdata:/var/lib/postgresql/data
      - ./volumes/user_data:/app/user_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health-check"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    environment:
      - DEBUG_MODE=true
      - LOCAL=${LOCAL}
      - PROCESS_POOL_WORKERS=${PROCESS_POOL_WORKERS}
      - LOG_LEVEL=DEBUG
      - ML_REPO_NAME=${ML_REPO_NAME}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@cognita-db:5432/cognita-config
      - METADATA_STORE_CONFIG=${METADATA_STORE_CONFIG}
      - VECTOR_DB_CONFIG=${VECTOR_DB_CONFIG}
      - LOCAL_DATA_DIRECTORY=/app/user_data
      - UNSTRUCTURED_IO_URL=${UNSTRUCTURED_IO_URL}
      - UNSTRUCTURED_IO_API_KEY=${UNSTRUCTURED_IO_API_KEY}
      - INFINITY_API_KEY=${INFINITY_API_KEY}
      - MODELS_CONFIG_PATH=${MODELS_CONFIG_PATH}
      - TFY_HOST=${TFY_HOST}
      - TFY_API_KEY=${TFY_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BRAVE_API_KEY=${BRAVE_API_KEY}
      - CARBON_AI_API_KEY=${CARBON_AI_API_KEY}
    entrypoint: /bin/bash
    command: -c "set -e; prisma db push --schema ./backend/database/schema.prisma && uvicorn --host 0.0.0.0 --port 8000 backend.server.app:app --reload"
    networks:
      - cognita-docker

networks:
  cognita-docker:
    external: false
